# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: cluster-1
  GKE_ZONE: europe-central2-a
  DEPLOYMENT_NAME: cloud-server-deploy
  NAMESPACE: cloud-server
  REPO: ghcr.io
  IMAGE: oleks12345/chmura-server

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test

  build-and-push:
    name: Build Docker image and push to repositories
    needs: [test]
    runs-on: ubuntu-latest

    # steps to perform in job
    steps:
      - name: Login to Github Packages
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build image and push to GitHub Container Registry
        uses: docker/build-push-action@v2
        with:
          tags: ghcr.io/oleks12345/chmura-server:${{ github.sha }}
          push: true
      - name: Build image and push to GitHub Container Registry
        uses: docker/build-push-action@v2
        with:
          tags: ghcr.io/oleks12345/chmura-server:latest
          push: true

  deploy:
    needs: [build-and-push]
    name: Setup, Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      # Set up kustomize
      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |-
          ./kustomize edit set image ${{ env.REPO }}/${{ env.IMAGE }}:TAG=${{ env.REPO }}/${{ env.IMAGE }}:${{ github.sha }}
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }} --namespace=${{ env.NAMESPACE }}
